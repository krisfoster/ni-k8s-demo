<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
	   <groupId>org.springframework.boot</groupId>
	   <artifactId>spring-boot-starter-parent</artifactId>
	   <version>2.6.5</version>
	   <relativePath/>
	</parent>

	<groupId>com.example</groupId>
	<artifactId>prime</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>primes-demo</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>17</java.version>
		<repackage.classifier/>
		<spring-native.version>0.11.2</spring-native.version>
		<native-buildtools.version>0.9.11</native-buildtools.version>
		<dockerfile-maven-version>1.4.13</dockerfile-maven-version>
		<docker-repository>phx.ocir.io/oracledeveloper/k8s-perf-demo</docker-repository>
		<docker-file>./Dockerfiles/Dockerfile.jvm</docker-file>
		<base-image-tag>openjdk</base-image-tag>
		<binary-name>prime</binary-name>
		<native-image-extra-flags></native-image-extra-flags>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>${spring-native.version}</version>
		</dependency>

        <dependency>
			<groupId>org.graalvm.buildtools</groupId>
			<artifactId>junit-platform-native</artifactId>
			<version>${native-buildtools.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
      	</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.rednoise</groupId>
			<artifactId>rita</artifactId>
			<version>2.4.501</version>
		</dependency>
		<dependency>
			<groupId>org.graalvm.buildtools</groupId>
			<artifactId>junit-platform-native</artifactId>
			<version>${native-buildtools.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
            <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    
    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/release</url>
            <snapshots>
            <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<classifier>${repackage.classifier}</classifier>
					<image>
						<builder>paketobuildpacks/builder:tiny</builder>
						<env>
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
						</env>
					</image>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>${spring-native.version}</version>
				<executions>
					<!-- <execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution> -->
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>
				<executions>
					<execution>
					<id>default</id>
					<goals>
						<goal>build</goal>
						<goal>push</goal>
					</goals>
					</execution>
				</executions>
				<configuration>
					<repository>${docker-repository}</repository>
					<tag>${base-image-tag}.${project.version}</tag>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					<dockerfile>${docker-file}</dockerfile>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<profiles>
		<!-- GraalVM EE Image-->
		<profile>
			<id>graalee</id>
			<properties>
				<docker-file>./Dockerfiles/Dockerfile.graalee</docker-file>
				<base-image-tag>graalee</base-image-tag>
			</properties>
		</profile>
		<!-- Native Image EE Image
			customise this by passing in extra args such as:
			Rename the tag for the image
			-Dbase-image-tag=NAME-OF-TAG
			Etra flasg to the native imaeg build
			-Dnative-image-extra-flags="- -gc=G1"
			-->
		<profile>
			<id>native</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
				<docker-file>./Dockerfiles/Dockerfile.native.simple</docker-file>
				<base-image-tag>native</base-image-tag>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-buildtools.version}</version>
						<executions>
							<execution>
								<id>build-native</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<imageName>${binary-name}</imageName>
							<buildArgs>
								<buildArg>-H:+ReportExceptionStackTraces ${native-image-extra-flags}</buildArg>
							</buildArgs>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile-maven-version}</version>
						<executions>
							<execution>
							<id>default</id>
							<goals>
								<goal>build</goal>
								<goal>push</goal>
							</goals>
							</execution>
						</executions>
						<configuration>
							<repository>${docker-repository}</repository>
							<tag>${base-image-tag}.${project.version}</tag>
							<buildArgs>
								<JAR_FILE>${binary-name}</JAR_FILE>
							</buildArgs>
							<dockerfile>${docker-file}</dockerfile>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile for building PGO optimised version of Native Image EE -->
		<profile>
			<id>native-pgo</id>
			<properties>
				<repackage.classifier>exec</repackage.classifier>
				<docker-file>./Dockerfiles/Dockerfile.native.simple</docker-file>
				<base-image-tag>native-pgo</base-image-tag>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-buildtools.version}</version>
						<executions>
							<execution>
								<id>build-native</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<imageName>prime</imageName>
							<buildArgs>
								<!-- Add support for G1GC -->
								<buildArg>--gc=G1</buildArg>
								<buildArg>-H:+ReportExceptionStackTraces</buildArg>
								<buildArg>--pgo=${project.basedir}/profiles/primes.iprof</buildArg>
							</buildArgs>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile-maven-version}</version>
						<executions>
							<execution>
							<id>default</id>
							<goals>
								<goal>build</goal>
								<goal>push</goal>
							</goals>
							</execution>
						</executions>
						<configuration>
							<repository>${docker-repository}</repository>
							<tag>${base-image-tag}.${project.version}</tag>
							<buildArgs>
								<JAR_FILE>${binary-name}</JAR_FILE>
							</buildArgs>
							<dockerfile>${docker-file}</dockerfile>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
